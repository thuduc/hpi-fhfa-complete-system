version: '3.8'

services:
  # Main HPI-FHFA application
  hpi-app:
    build:
      context: .
      dockerfile: Dockerfile
    image: hpi-fhfa:latest
    container_name: hpi-app
    ports:
      - "8000:8000"
    environment:
      - HPI_ENV=production
      - HPI_CONFIG_PATH=/app/config/production.yaml
      - HPI_REDIS_URL=redis://redis:6379/0
      - HPI_POSTGRES_URL=postgresql://hpi:hpi123@postgres:5432/hpi_db
      - HPI_LOG_LEVEL=INFO
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./results:/app/results
    depends_on:
      - redis
      - postgres
    restart: unless-stopped
    networks:
      - hpi-network

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: hpi-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - hpi-network

  # PostgreSQL for persistent storage
  postgres:
    image: postgres:15-alpine
    container_name: hpi-postgres
    environment:
      - POSTGRES_USER=hpi
      - POSTGRES_PASSWORD=hpi123
      - POSTGRES_DB=hpi_db
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - hpi-network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: hpi-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/nginx/certs:ro
    depends_on:
      - hpi-app
    restart: unless-stopped
    networks:
      - hpi-network

  # Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: hpi-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    restart: unless-stopped
    networks:
      - hpi-network

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: hpi-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana-data:/var/lib/grafana
      - ./config/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./config/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - hpi-network

  # Batch worker
  hpi-worker:
    build:
      context: .
      dockerfile: Dockerfile
    image: hpi-fhfa:latest
    container_name: hpi-worker
    command: ["worker"]
    environment:
      - HPI_ENV=production
      - HPI_CONFIG_PATH=/app/config/production.yaml
      - HPI_REDIS_URL=redis://redis:6379/0
      - HPI_POSTGRES_URL=postgresql://hpi:hpi123@postgres:5432/hpi_db
      - HPI_WORKER_CONCURRENCY=4
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./results:/app/results
    depends_on:
      - redis
      - postgres
    restart: unless-stopped
    networks:
      - hpi-network
    deploy:
      replicas: 2

volumes:
  redis-data:
  postgres-data:
  prometheus-data:
  grafana-data:

networks:
  hpi-network:
    driver: bridge